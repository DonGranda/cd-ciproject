name: Connect EC2 to EKS and Configure Monitoring Stack

on:
  workflow_dispatch

jobs:
  setup-ec2:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Execute remote SSH commands on EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_URL }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_PRIVATE_KEY}}
          script: |
            # Update EC2 and install required packages
            sudo apt update -y
            sudo apt install -y curl wget unzip awscli
            
            # Install kubectl
            curl -o kubectl https://s3.us-west-2.amazonaws.com/amazon-eks/1.30.4/2024-09-11/bin/linux/amd64/kubectl
            chmod +x kubectl
            sudo mv kubectl /usr/local/bin/

            # Install Helm
            curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3
            chmod 700 get_helm.sh
            ./get_helm.sh

            # Configure AWS credentials (ensure EC2 has IAM role or configure manually)
            aws eks --region us-east-1 update-kubeconfig --name my-cluster

            # Verify connection to EKS
            kubectl get nodes

            # Add Helm repositories
            helm repo add stable https://charts.helm.sh/stable || true
            helm repo add prometheus-community https://prometheus-community.github.io/helm-charts || true
            helm repo update

            # Deploy Prometheus Stack
            if kubectl get namespace prometheus > /dev/null 2>&1; then
                helm upgrade stable prometheus-community/kube-prometheus-stack -n prometheus
            else
                kubectl create namespace prometheus
                helm install stable prometheus-community/kube-prometheus-stack -n prometheus
            fi

            # Patch Prometheus & Grafana services to LoadBalancer
            kubectl patch svc stable-kube-prometheus-sta-prometheus -n prometheus -p '{"spec": {"type": "LoadBalancer"}}'
            kubectl patch svc stable-grafana -n prometheus -p '{"spec": {"type": "LoadBalancer"}}'

            # Deploy ArgoCD
            kubectl create namespace argocd || true
            kubectl apply -n argocd -f https://raw.githubusercontent.com/argoproj/argo-cd/stable/manifests/install.yaml
            kubectl patch svc argocd-server -n argocd -p '{"spec": {"type": "LoadBalancer"}}'

            # Fetch and display LoadBalancer IPs
            echo "Fetching Service IPs..."
            echo "Prometheus:"
            kubectl get svc stable-kube-prometheus-sta-prometheus -n prometheus -o jsonpath='{.status.loadBalancer.ingress[0].hostname}'
            echo ""
            
            echo "Grafana:"
            kubectl get svc stable-grafana -n prometheus -o jsonpath='{.status.loadBalancer.ingress[0].hostname}'
            echo ""
            
            echo "ArgoCD:"
            kubectl get svc argocd-server -n argocd -o jsonpath='{.status.loadBalancer.ingress[0].hostname}'
            echo ""
